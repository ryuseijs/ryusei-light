{"version":3,"file":"ryuseilight-complete.min.js","sources":["../../src/js/constants/categories.ts","../../src/js/utils/type/type.ts","../../src/js/utils/array/toArray/toArray.ts","../../src/js/utils/dom/addClass/addClass.ts","../../src/js/utils/dom/append/append.ts","../../src/js/utils/object/forOwn/forOwn.ts","../../src/js/utils/object/assign/assign.ts","../../src/js/utils/dom/attr/attr.ts","../../src/js/utils/dom/query/query.ts","../../src/js/utils/dom/styles/styles.ts","../../src/js/utils/dom/text/text.ts","../../src/js/utils/error/assert/assert.ts","../../src/js/constants/project.ts","../../src/js/utils/map/before/before.ts","../../src/js/utils/map/find/find.ts","../../src/js/utils/string/startsWith/startsWith.ts","../../src/js/core/Lexer/Lexer.ts","../../src/js/utils/regexp/getFlags/getFlags.ts","../../src/js/constants/characters.ts","../../src/js/event/EventBus.ts","../../src/js/constants/classes.ts","../../src/js/core/Renderer/Renderer.ts","../../src/js/utils/string/escapeHtml/escapeHtml.ts","../../src/js/constants/regexp.ts","../../src/js/languages/common/common.ts","../../src/js/languages/css/css.ts","../../src/js/languages/javascript/javascript.ts","../../src/js/languages/html/html.ts","../../src/js/languages/none/none.ts","../../src/js/languages/xml/xml.ts","../../src/js/languages/json/json.ts","../../src/js/languages/jsx/jsx.ts","../../src/js/languages/scss/scss.ts","../../src/js/languages/svg/svg.ts","../../src/js/languages/typescript/typescript.ts","../../src/js/languages/vue/vue.ts","../../src/js/core/RyuseiLight/RyuseiLight.ts","../../src/js/components/ActiveLines/ActiveLines.ts","../../src/js/components/Copy/Copy.ts","../../src/js/utils/dom/create/create.ts","../../src/js/utils/error/error/error.ts","../../src/js/components/Gutter/Gutter.ts","../../src/js/utils/function/throttle/throttle.ts","../../src/js/components/LanguageName/LanguageName.ts","../../src/js/components/LineNumbers/LineNumbers.ts","../../src/js/components/Overlay/Overlay.ts","../../src/js/components/Title/Title.ts","../../src/js/build/complete.ts"],"sourcesContent":["export const CATEGORY_KEYWORD = 'keyword';\n\nexport const CATEGORY_COMMENT = 'comment';\n\nexport const CATEGORY_TAG = 'tag';\n\nexport const CATEGORY_SELECTOR = 'selector';\n\nexport const CATEGORY_ATTRIBUTE = 'attr';\n\nexport const CATEGORY_PROPERTY = 'prop';\n\nexport const CATEGORY_VALUE = 'value';\n\nexport const CATEGORY_VARIABLE = 'variable';\n\nexport const CATEGORY_ENTITY = 'entity';\n\nexport const CATEGORY_PROLOG = 'prolog';\n\nexport const CATEGORY_IDENTIFIER = 'identifier';\n\nexport const CATEGORY_STRING = 'string';\n\nexport const CATEGORY_NUMBER = 'number';\n\nexport const CATEGORY_BOOLEAN = 'boolean';\n\nexport const CATEGORY_FUNCTION = 'function';\n\nexport const CATEGORY_CLASS = 'class';\n\nexport const CATEGORY_DECORATOR = 'decorator';\n\nexport const CATEGORY_REGEXP = 'regexp';\n\nexport const CATEGORY_OPERATOR = 'operator';\n\nexport const CATEGORY_BRACKET = 'bracket';\n\nexport const CATEGORY_SYMBOL = 'symbol';\n\nexport const CATEGORY_SPACE = 'space';\n\nexport const CATEGORY_TEXT = 'text';\n","/**\n * Checks if the given subject is an object or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an object, or otherwise `false`.\n */\nexport function isObject<T extends object>( subject: any ): subject is T {\n  return subject !== null && typeof subject === 'object';\n}\n\n/**\n * Checks if the given subject is an array or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an array, or otherwise `false`.\n */\nexport function isArray<T>( subject: any ): subject is T[] {\n  return Array.isArray( subject );\n}\n\n/**\n * Checks if the given subject is a function or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is a function, or otherwise `false`.\n */\nexport function isFunction( subject: any ): subject is ( ...args: any[] ) => any {\n  return typeof subject === 'function';\n}\n\n/**\n * Checks if the given subject is a string or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is a string, or otherwise `false`.\n */\nexport function isString( subject: any ): subject is string {\n  return typeof subject === 'string';\n}\n\n/**\n * Checks if the given subject is `undefined` or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is `undefined`, or otherwise `false`.\n */\nexport function isUndefined( subject: any ): subject is undefined {\n  return typeof subject === 'undefined';\n}\n\n/**\n * Checks if the given subject is an HTMLElement instance or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an HTMLElement instance, or otherwise `false`.\n */\nexport function isHTMLElement( subject: any ): subject is HTMLElement {\n  return subject instanceof HTMLElement;\n}\n","import { isArray } from '../../type/type';\n\n\n/**\n * Push the provided value to an array only if the value is not an array.\n *\n * @param value - A value to push.\n *\n * @return An array containing the value, or the value itself if it is already an array.\n */\nexport function toArray<T>( value: T | T[] ): T[] {\n  return isArray<T>( value ) ? value : [ value ];\n}\n","import { toArray } from '../../array';\n\n\n/**\n * Adds classes to the element.\n *\n * @param elm     - An element to add classes to.\n * @param classes - Classes to add.\n */\nexport function addClass( elm: HTMLElement, classes: string | string[] ): void {\n  toArray( classes ).forEach( name => {\n    if ( name ) {\n      elm.classList.add( name );\n    }\n  } );\n}\n","import { toArray } from '../../array';\n\n\n/**\n * Appends children to the parent element.\n *\n * @param parent   - A parent element.\n * @param children - A child or children to append to the parent.\n */\nexport function append( parent: HTMLElement, children: Node | Node[] ): void {\n  children = toArray<Node>( children );\n\n  for ( let i = 0; i < children.length; i++ ) {\n    parent.appendChild( children[ i ] );\n  }\n}\n","/**\n * Iterates over the provided object by own enumerable keys with calling the iteratee function.\n *\n * @param object   - An object to iterate over.\n * @param iteratee - An iteratee function that takes the value and key as arguments.\n *\n * @return A provided object itself.\n */\nexport function forOwn<T extends object>( object: T, iteratee: ( value: T[ keyof T ], key: string ) => void ) {\n  const keys = Object.keys( object );\n\n  for ( let i = 0; i < keys.length; i++ ) {\n    iteratee( object[ keys[ i ] ], keys[ i ] );\n  }\n}\n","import { isUndefined } from '../../type/type';\nimport { forOwn } from '../forOwn/forOwn';\n\n\n/**\n * Assign U to T.\n *\n * @typeParam T - An object to assign to.\n * @typeParam U - An object to assign.\n *\n * @return An assigned object type.\n */\nexport type Assign<T, U> = Omit<T, keyof U> & U;\n\nexport function assign<T extends object>( object: T ): T;\n\n// There is a way to type arguments recursively, but these fixed definitions are enough for this project.\nexport function assign<T extends object, U extends object>( object: T, source: U ): Assign<T, U>;\n\nexport function assign<T extends object, U1 extends object, U2 extends object>(\n  object: T, source1: U1, source2: U2\n): Assign<Assign<T, U1>, U2>;\n\nexport function assign<T extends object, U1 extends object, U2 extends object, U3 extends object>(\n  object: T, source1: U1, source2: U2, source3: U3\n): Assign<Assign<Assign<T, U1>, U2>, U3>;\n\n/**\n * Assigns all own enumerable properties of all source objects to the provided object.\n * `undefined` in source objects will be skipped.\n *\n * @param object  - An object to assign properties to.\n * @param sources - Objects to assign properties from.\n *\n * @return An object assigned properties of the sources to.\n */\nexport function assign<T extends object, U extends object>( object: T, ...sources: U[] ): any {\n  sources.forEach( source => {\n    forOwn( source, ( value, key ) => {\n      if ( ! isUndefined( source[ key ] ) ) {\n        object[ key ] = source[ key ];\n      }\n    } );\n  } );\n\n  return object;\n}\n","import { forOwn } from '../../object';\nimport { isObject, isString } from '../../type/type';\n\n\nexport function attr( elm: Element, attrs: string ): string;\nexport function attr( elm: Element, attrs: Record<string, string | number | boolean> ): void;\n\n/**\n * Sets new attributes to the passed element if the `attrs` is an object literal,\n * or gets an attribute value from it if the `attrs` is a string.\n *\n * @param elm   - An element to set or get an attribute.\n * @param attrs - An attribute name as a string or new attributes as an object literal.\n */\nexport function attr( elm: Element, attrs: string | Record<string, string | number | boolean> ): string | void {\n  if ( isString( attrs ) ) {\n    return elm.getAttribute( attrs ) || '';\n  }\n\n  if ( isObject( attrs ) ) {\n    forOwn( attrs, ( value, key ) => {\n      elm.setAttribute( key, String( value ) );\n    } );\n  }\n}\n","/**\n * Returns an element that matches the provided selector.\n *\n * @param selector - A selector.\n * @param parent   - Optional. A parent element to start searching elements from.\n *\n * @return A found element or `null`.\n */\nexport function query<E extends Element = HTMLElement>(\n  selector: string,\n  parent: HTMLElement | Document = document\n): E | null {\n  return parent.querySelector<E>( selector );\n}\n","import { forOwn } from '../../object';\n\n\n/**\n * Applies inline styles to the provided element by an object literal.\n *\n * @param elm    - An element to apply styles to.\n * @param styles - An object literal with styles.\n */\nexport function styles( elm: HTMLElement, styles: Record<string, string | number> ): void {\n  forOwn( styles, ( value, key ) => {\n    elm.style[ key ] = String( value );\n  } );\n}\n","import { isUndefined } from '../../type/type';\n\n\nexport function text( node: Node ): string;\nexport function text( node: Node, text: string ): void;\n\n/**\n * Sets or gets a text content of the provided node.\n *\n * @param node - A node to get or set a text.\n * @param text - Optional. A text to set.\n */\nexport function text( node: Node, text?: string ): string | void {\n  if ( isUndefined( text ) ) {\n    return node.textContent;\n  }\n\n  node.textContent = text;\n}\n","/**\n * Throws an error if the provided condition is falsy.\n *\n * @param condition - If falsy, an error is thrown.\n * @param message   - Optional. A message for the error.\n */\nexport function assert( condition: any, message = '' ): void {\n  if ( ! condition ) {\n    throw new Error( message );\n  }\n}\n","/**\n * The project code name.\n *\n * @since 0.0.1\n */\nexport const PROJECT_CODE = 'ryuseilight';\n\n/**\n * The abbreviated project code.\n *\n * @since 0.0.1\n */\nexport const PROJECT_CODE_SHORT = 'rl';\n","import { MapEntry } from '../types';\nimport { find } from '../find/find';\n\n\n/**\n * Insert entries before the reference entry specified by the `ref`.\n * If the reference is not found, a new entry is created.\n *\n * @param map     - A map to insert values to.\n * @param ref     - A reference key.\n * @param entries - entries to insert.\n */\nexport function before<T extends any>( map: MapEntry<T>[], ref: string, entries: MapEntry<T>[] ): void {\n  const index = find( map, ref );\n\n  if ( index > -1 ) {\n    map.splice( index, 0, ...entries );\n  } else {\n    map.push( ...entries );\n  }\n}\n","import { MapEntry } from '../types';\n\n\n/**\n * Finds the provided key from a map and returns its index.\n *\n * @param map - A map to search in.\n * @param key - A key to search for.\n *\n * @return An index if found, or `-1` otherwise.\n */\nexport function find<T extends any>( map: MapEntry<T>[], key: string ): number {\n  for ( let i = 0; i < map.length; i++ ) {\n    if ( map[ i ][ 0 ] === key ) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n","/**\n * Checks if the string starts with the `char` or not.\n *\n * @param string - A string to check.\n * @param char   - A character.\n *\n * @return `true` if the string starts with the `char`, or otherwise `false`.\n */\nexport function startsWith( string: string, char: string ): boolean {\n  return string.charAt( 0 ) === char;\n}\n","import { Language, Token, Tokenizer } from '../../types';\nimport { LINE_BREAK } from '../../constants/characters';\nimport { CATEGORY_TEXT } from '../../constants/categories';\nimport { assert, forOwn, isUndefined, startsWith, getFlags } from '../../utils';\n\n\n/**\n * Checks if the RegExp supports the sticky flag or not.\n */\nconst isStickySupported = ! isUndefined( /x/.sticky );\n\n/**\n * The class for creating a simple lexer by a Language object.\n *\n * @since 0.0.1\n */\nexport class Lexer {\n  /**\n   * Holds the Language object.\n   */\n  readonly language: Language;\n\n  /**\n   * Stores lines.\n   */\n  protected lines: Token[][];\n\n  /**\n   * Indicates the current line index.\n   */\n  protected index: number;\n\n  /**\n   * The Lexer constructor.\n   *\n   * @param language - A Language object.\n   */\n  constructor( language: Language ) {\n    this.language = language;\n    this.init( language );\n  }\n\n  /**\n   * Initializes the language object.\n   *\n   * @param language - A Language object to initialize.\n   */\n  protected init( language: Language ): void {\n    forOwn( language.grammar, ( tokenizers, key ) => {\n      language.grammar[ key ] = this.merge( language, tokenizers );\n    } );\n\n    language.use = language.use || {};\n    forOwn( language.use, this.init.bind( this ) );\n  }\n\n  /**\n   * Includes tokenizers required by `#` annotation and flatten them.\n   *\n   * @param language   - A language object.\n   * @param tokenizers - Tokenizers.\n   *\n   * @return Merged tokenizers.\n   */\n  protected merge( language: Language, tokenizers: Tokenizer[] ): Tokenizer[] {\n    return tokenizers.reduce( ( merged, tokenizer ) => {\n      const [ category, regexp ] = tokenizer;\n\n      if ( startsWith( category, '#' ) && ! regexp ) {\n        const include = language.grammar[ category.slice( 1 ) ];\n        assert( include );\n        merged.push( ...this.merge( language, include ) );\n      } else {\n        const flags = getFlags( regexp ).replace( /[gy]/g, '' );\n\n        if ( isStickySupported ) {\n          tokenizer[ 1 ] = new RegExp( regexp.source, 'y' + flags );\n        } else {\n          tokenizer[ 1 ] = new RegExp( regexp.source + '|()', 'g' + flags );\n        }\n\n        merged.push( tokenizer );\n      }\n\n      return merged;\n    }, [] );\n  }\n\n  /**\n   * Tokenizes the text by the provided language and tokenizers.\n   *\n   * @param text       - A text to tokenize.\n   * @param language   - A Grammar object.\n   * @param tokenizers - An array with tokenizers.\n   *\n   * @return An index of the text where the handling ends.\n   */\n  protected tokenizeBy( text: string, language: Language, tokenizers: Tokenizer[] ): number {\n    let index    = 0;\n    let position = 0;\n\n    main:\n    while ( index < text.length ) {\n      for ( let i = 0; i < tokenizers.length; i++ ) {\n        const tokenizer = tokenizers[ i ];\n        const regexp    = tokenizer[ 1 ];\n        const command   = tokenizer[ 2 ];\n\n        regexp.lastIndex = index;\n\n        const match = regexp.exec( text );\n\n        if ( ! match || ! match[ 0 ] ) {\n          continue;\n        }\n\n        if ( position < index ) {\n          this.push( [ CATEGORY_TEXT, text.slice( position, index ) ] );\n        }\n\n        if ( command === '@back' ) {\n          position = index;\n          break main;\n        }\n\n        const offset = this.handle( match, language, tokenizers[ i ] );\n\n        index += offset || 1;\n        position = index;\n\n        if ( command === '@break' ) {\n          break main;\n        }\n\n        continue main;\n      }\n\n      index++;\n    }\n\n    if ( position < index ) {\n      this.push( [ CATEGORY_TEXT, text.slice( position ) ] );\n    }\n\n    return index;\n  }\n\n  /**\n   * Pushes the provided token to the lines array.\n   *\n   * @param token - A token to push.\n   */\n  protected push( token: Token ): void {\n    const [ category ] = token;\n\n    let index;\n    let from = 0;\n    let text = token[ 1 ];\n\n    while ( ( index = text.indexOf( LINE_BREAK, from ) ) > -1 ) {\n      if ( from < index ) {\n        this.lines[ this.index ].push( [ category, text.slice( from, index ) ] );\n      }\n\n      from = index + 1;\n      this.lines[ ++this.index ] = [];\n    }\n\n    text = text.slice( from );\n\n    if ( text ) {\n      this.lines[ this.index ].push( [ category, text ] );\n    }\n  }\n\n  /**\n   * Handles the matched text.\n   *\n   * @param match     - A matched result.\n   * @param language  - A Language object.\n   * @param tokenizer - A tokenizer that has been matched with the text.\n   *\n   * @return An index of the text where the handling ends.\n   */\n  protected handle( match: RegExpExecArray, language: Language, tokenizer: Tokenizer ): number {\n    const [ category ] = tokenizer;\n    let offset = 0;\n\n    if ( category ) {\n      const [ text ] = match;\n\n      if ( startsWith( category, '@' ) ) {\n        const lang = language.use[ category.slice( 1 ) ];\n        assert( lang );\n\n        return this.tokenizeBy( text, lang, lang.grammar.main );\n      }\n\n      if ( startsWith( category, '#' ) ) {\n        const tokenizers = language.grammar[ category.slice( 1 ) ];\n        assert( tokenizers );\n\n        const value = tokenizer[ 2 ] === '@rest' ? match.input.slice( match.index ) : text;\n        return this.tokenizeBy( value, language, tokenizers );\n      }\n\n      offset = text.length;\n      this.push( [ category, text ] );\n    }\n\n    return offset;\n  }\n\n  /**\n   * Tokenizes the text by the current language.\n   *\n   * @param text  - A text to tokenize.\n   *\n   * @return An array with tokens.\n   */\n  tokenize( text: string ): Token[][] {\n    this.lines = [ [] ];\n    this.index = 0;\n\n    this.tokenizeBy( text, this.language, this.language.grammar.main );\n\n    return this.lines;\n  }\n}\n","/**\n * Returns flags of the provided regexp object.\n * IE doesn't support RegExp#flags.\n *\n * @param regexp - A RegExp object.\n *\n * @return Flags as a string.\n */\nexport function getFlags( regexp: RegExp ): string {\n  return regexp.toString().match( /[gimsy]*$/ )[ 0 ];\n}\n","/**\n * The line break character.\n *\n * @private\n * @since 0.0.1\n */\nexport const LINE_BREAK = '\\n';\n","import { AnyFunction } from '../types';\n\n\n/**\n * The class for providing the very simple event bus.\n *\n * @private\n * @since 0.0.1\n */\nexport class EventBus {\n  /**\n   * Holds handlers.\n   */\n  protected handlers = {};\n\n  /**\n   * Attaches a handler.\n   *\n   * @param event    - An event name.\n   * @param callback - A callback function to register.\n   */\n  on( event: string, callback: AnyFunction ): void {\n    const handlers = ( this.handlers[ event ] = this.handlers[ event ] || [] );\n    handlers.push( { callback } );\n  }\n\n  /**\n   * Emits an event.\n   *\n   * @param event - An event name.\n   * @param args  - Optional. Any number of arguments to pass to callbacks.\n   */\n  emit( event, ...args ): void {\n    ( this.handlers[ event ] || [] ).forEach( handler => {\n      handler.callback( ...args );\n    } );\n  }\n\n  /**\n   * Destroys the event bus.\n   */\n  destroy(): void {\n    this.handlers = {};\n  }\n}\n","import { PROJECT_CODE, PROJECT_CODE_SHORT } from './project';\n\n\n/**\n * The collection of class names.\n *\n * @since 0.0.1\n */\nexport const CLASSES = {\n  root     : PROJECT_CODE,\n  container: `${ PROJECT_CODE_SHORT }__container`,\n  body     : `${ PROJECT_CODE_SHORT }__body`,\n  code     : `${ PROJECT_CODE_SHORT }__code`,\n  line     : `${ PROJECT_CODE_SHORT }__line`,\n  token    : `${ PROJECT_CODE_SHORT }__token`,\n  active   : 'is-active',\n};\n","import { LINE_BREAK } from '../../constants/characters';\nimport { Options, LanguageInfo, Token, Component } from '../../types';\nimport { EventBus } from '../../event/EventBus';\nimport { PROJECT_CODE_SHORT } from '../../constants/project';\nimport { CLASSES } from '../../constants/classes';\nimport { forOwn, escapeHtml } from '../../utils';\n\n\n/**\n * Stores all Component functions.\n */\nconst Components: Record<string, Component> = {};\n\n/**\n * The class for highlighting code via provided tokens.\n *\n * @since 0.0.1\n */\nexport class Renderer {\n  /**\n   * Adds components.\n   *\n   * @param components - An object literal with Component functions.\n   */\n  static compose( components: Record<string, Component> ): void {\n    forOwn( components, ( Component, name ) => {\n      if ( ! Components[ name ] ) {\n        Components[ name ] = Component;\n      }\n    } );\n  }\n\n  /**\n   * Holds lines with tokens.\n   */\n  readonly lines = [];\n\n  /**\n   * Holds the language info.\n   */\n  readonly info: LanguageInfo;\n\n  /**\n   * Holds the root element if provided.\n   */\n  readonly root: HTMLElement | undefined;\n\n  /**\n   * Holds options.\n   */\n  readonly options: Options;\n\n  /**\n   * Holds the EventBus instance.\n   */\n  readonly event: EventBus = new EventBus();\n\n  /**\n   * The Renderer constructor.\n   *\n   * @param lines   - Lines with tokens to render.\n   * @param info    - The language info object.\n   * @param root    - Optional. A root element to highlight.\n   * @param options - Options.\n   */\n  constructor( lines: Token[][], info: LanguageInfo, root?: HTMLElement, options: Options = {} ) {\n    this.lines   = lines;\n    this.info    = info;\n    this.root    = root;\n    this.options = options;\n\n    this.init();\n  }\n\n  /**\n   * Initializes the instance.\n   */\n  protected init(): void {\n    const { lines } = this;\n\n    if ( lines.length ) {\n      const tokens = lines[ lines.length - 1 ];\n\n      if ( ! tokens.length || ( tokens.length === 1 && ! tokens[ 0 ][ 1 ].trim() ) ) {\n        // Removes the last empty line.\n        lines.pop();\n      }\n    }\n\n    forOwn( Components, Component => { Component( this ) } );\n    this.event.emit( 'mounted', this );\n  }\n\n  /**\n   * Renders lines as HTML.\n   *\n   * @param append - A function to add fragments to the HTML string.\n   *\n   * @return A rendered HTML string.\n   */\n  protected renderLines( append: ( fragment: string ) => void ): void {\n    const event = this.event;\n    const tag   = this.options.span ? 'span' : 'code';\n\n    for ( let i = 0; i < this.lines.length; i++ ) {\n      const tokens  = this.lines[ i ];\n      const classes = [ CLASSES.line ];\n\n      event.emit( 'line:open', append, classes, i );\n      append( `<div class=\"${ classes.join( ' ' ) }\">` );\n\n      if ( tokens.length ) {\n        for ( let j = 0; j < tokens.length; j++ ) {\n          const token   = tokens[ j ];\n          const classes = [ `${ CLASSES.token } ${ PROJECT_CODE_SHORT }__${ token[ 0 ] }` ];\n\n          event.emit( 'token', token, classes );\n\n          append( `<${ tag } class=\"${ classes.join( ' ' ) }\">${ escapeHtml( token[ 1 ] ) }</${ tag }>` );\n        }\n      } else {\n        append( LINE_BREAK );\n      }\n\n      append( '</div>' );\n      event.emit( 'line:closed', append, i );\n    }\n  }\n\n  /**\n   * Returns all lines and wrapper elements.\n   *\n   * @param pre - Whether to wrap elements by `pre` or not.\n   *\n   * @return An HTML string.\n   */\n  html( pre = true ): string {\n    const event = this.event;\n    let html  = '';\n\n    const append = ( fragment: string ) => { html += fragment };\n\n    if ( pre ) {\n      html += `<pre class=\"${ CLASSES.root } ${ CLASSES.root }--${ this.info.id }\">`;\n    }\n\n    const containerClasses = [ CLASSES.container ];\n    event.emit( 'open', append, containerClasses );\n\n    html += `<div class=\"${ containerClasses.join( ' ' ) }\">`;\n    event.emit( 'opened', append );\n\n    const bodyClasses = [ `${ CLASSES.body }${ this.options.wrap ? ` ${ CLASSES.body }--wrap` : '' }` ];\n    event.emit( 'body:open', append, bodyClasses );\n\n    html += `<div class=\"${ bodyClasses.join( ' ' ) }\">`;\n    event.emit( 'body:opened', append );\n\n    html += `<div class=\"${ CLASSES.code }\">`;\n    this.renderLines( append );\n    html += `</div>`; // code\n\n    event.emit( 'body:close', append );\n    html += `</div>`; // body\n\n    event.emit( 'close', append );\n    html += `</div>`; // container\n\n    event.emit( 'closed', append );\n\n    if ( pre ) {\n      html += `</pre>`;\n    }\n\n    return html;\n  }\n\n  /**\n   * Destroys the instance.\n   */\n  destroy(): void {\n    this.event.emit( 'destroy' );\n    this.event.destroy();\n  }\n}\n","/**\n * Converts essential HTML special characters to HTML entities.\n *\n * @param string - A string to escape.\n *\n * @return An escaped string.\n */\nexport function escapeHtml( string: string ): string {\n  return string.replace( /&/g, '&amp;' ).replace( /</g, '&lt;' );\n}\n","export const REGEXP_FUNCTION = /\\b\\w+(?= *\\()/;\n\nexport const REGEXP_FLOAT = /\\d+\\.?\\d*|\\d*\\.?\\d+/;\n\nexport const REGEXP_NUMBER = /[+-]?(\\d+\\.?\\d*|\\d*\\.?\\d+)([eE][+-]?\\d+)?/;\n\nexport const REGEXP_BOOLEAN = /\\b(?:true|false)\\b/;\n\nexport const REGEXP_BRACKET = /[[\\]{}()]/;\n\nexport const REGEXP_SPACE = /[ \\t]+/;\n\nexport const REGEXP_QUOTE = /'(?:\\\\'|.)*?'/;\n\nexport const REGEXP_DOUBLE_QUOTE = /\"(?:\\\\\"|.)*?\"/;\n\nexport const REGEXP_MULTILINE_COMMENT = /\\/\\*[\\s\\S]*?\\*\\//;\n\nexport const REGEXP_SLASH_COMMENT = /\\/\\/.*/;\n","import { Language } from '../../types';\nimport {\n  CATEGORY_BOOLEAN, CATEGORY_BRACKET, CATEGORY_CLASS, CATEGORY_COMMENT, CATEGORY_FUNCTION,\n  CATEGORY_IDENTIFIER, CATEGORY_KEYWORD, CATEGORY_NUMBER, CATEGORY_OPERATOR,\n  CATEGORY_SPACE, CATEGORY_STRING, CATEGORY_SYMBOL,\n} from '../../constants/categories';\nimport {\n  REGEXP_BOOLEAN, REGEXP_BRACKET, REGEXP_DOUBLE_QUOTE, REGEXP_FUNCTION, REGEXP_MULTILINE_COMMENT, REGEXP_NUMBER,\n  REGEXP_QUOTE, REGEXP_SLASH_COMMENT, REGEXP_SPACE,\n} from '../../constants/regexp';\n\n\n/**\n * Returns a common language definition.\n *\n * @return A Language object.\n */\nexport function common(): Language {\n  return {\n    id  : 'common',\n    name: '',\n\n    grammar: {\n      main: [\n        [ CATEGORY_STRING, REGEXP_QUOTE ],\n        [ CATEGORY_STRING, REGEXP_DOUBLE_QUOTE ],\n        [ CATEGORY_COMMENT, REGEXP_MULTILINE_COMMENT ],\n        [ CATEGORY_COMMENT, REGEXP_SLASH_COMMENT ],\n        [ CATEGORY_KEYWORD, /\\b(?:break|catch|class|continue|do|else|extends|finally|for|function|if|implements|in|instanceof|interface|new|null|return|throw|trait|try|while)\\b/ ],\n        [ CATEGORY_CLASS, /\\b[A-Z][\\w$]*\\b/ ], //todo\n        [ CATEGORY_FUNCTION, REGEXP_FUNCTION ],\n        [ CATEGORY_BOOLEAN, REGEXP_BOOLEAN ],\n        [ CATEGORY_IDENTIFIER, /\\b[a-z_$][\\w$]*\\b/ ],\n        [ CATEGORY_NUMBER, REGEXP_NUMBER ],\n        [ CATEGORY_OPERATOR, /\\+[+=]?|-[-=]?|\\*\\*?=?|\\/=?|%=?|&&?=?|\\|\\|?=?|\\?\\??=?|<<?=?|>>?=?|[!=]=?=?|[~:^]/ ],\n        [ CATEGORY_BRACKET, REGEXP_BRACKET ],\n        [ CATEGORY_SYMBOL, /[;.,@]+/ ],\n        [ CATEGORY_SPACE, REGEXP_SPACE ],\n      ],\n    },\n  };\n}\n","import { Language } from '../../types';\nimport {\n  CATEGORY_BRACKET, CATEGORY_COMMENT, CATEGORY_FUNCTION, CATEGORY_KEYWORD, CATEGORY_NUMBER, CATEGORY_OPERATOR,\n  CATEGORY_PROPERTY, CATEGORY_SELECTOR, CATEGORY_SPACE, CATEGORY_STRING, CATEGORY_SYMBOL, CATEGORY_TAG,\n} from '../../constants/categories';\nimport { REGEXP_MULTILINE_COMMENT, REGEXP_SPACE } from '../../constants/regexp';\n\n\n/**\n * Returns the CSS language definition.\n *\n * @return A Language object.\n */\nexport function css(): Language {\n  return {\n    id  : 'css',\n    name: 'CSS',\n\n    grammar: {\n      main: [\n        [ '#common' ],\n        [ '#findBlock' ],\n        [ '#findAtrule' ],\n      ],\n\n      findBlock: [\n        [ '#block', /[^\\s][^;{}]+{.*?}/s, '@rest' ],\n      ],\n\n      findAtrule: [\n        [ '#atrule', /@\\w.+?(;|(?=[{}]))/s ],\n      ],\n\n      findSelector: [\n        [ '#selector', /[^\\s{};/].*?(?={)/s ],\n      ],\n\n      common: [\n        [ CATEGORY_STRING, /(['\"]).*?[^\\\\]\\1/s ],\n        [ CATEGORY_COMMENT, REGEXP_MULTILINE_COMMENT ],\n        [ CATEGORY_SPACE, REGEXP_SPACE ],\n      ],\n\n      block: [\n        [ '#findAtrule' ],\n        [ '#findSelector' ],\n        [ '#inner', /{/, '@rest' ],\n        [ CATEGORY_BRACKET, /}/, '@break' ],\n        [ CATEGORY_SPACE, REGEXP_SPACE ],\n      ],\n\n      inner: [\n        [ CATEGORY_BRACKET, /{/ ],\n        [ '#common' ],\n        [ '#findBlock' ],\n        [ '#props' ],\n        [ '#findAtrule' ],\n        [ '', /}/, '@back' ],\n      ],\n\n      atrule: [\n        [ '#common' ],\n        [ '#url', /\\burl\\(/, '@rest' ],\n        [ CATEGORY_SPACE, REGEXP_SPACE ],\n        [ CATEGORY_KEYWORD, /[^\\s();]+/ ],\n        [ CATEGORY_SYMBOL, /[:;,]/ ],\n        [ '#paren', /\\(/, '@rest' ],\n      ],\n\n      paren: [\n        [ CATEGORY_BRACKET, /^\\(/ ],\n        [ '#common' ],\n        [ '#paren', /\\(/, '@rest' ],\n        [ CATEGORY_BRACKET, /\\)/, '@break' ],\n        [ '#props' ],\n      ],\n\n      selector: [\n        [ '#common' ],\n        [ CATEGORY_OPERATOR, /[>+~]/ ],\n        [ CATEGORY_BRACKET, /[[\\]()]/ ],\n        [ CATEGORY_SYMBOL, /=/ ],\n        [ CATEGORY_SELECTOR, /::?\\S+/ ],\n        [ CATEGORY_SELECTOR, /[\\W\\d]\\S+/ ],\n        [ CATEGORY_TAG, /\\b[a-zA-Z]+|\\*/ ],\n        [ CATEGORY_SELECTOR, /\\S+/ ],\n      ],\n\n      url: [\n        [ '#common' ],\n        [ CATEGORY_FUNCTION, /^url/ ],\n        [ CATEGORY_BRACKET, /\\(/ ],\n        [ CATEGORY_STRING, /[^)]+/ ],\n        [ CATEGORY_BRACKET, /\\)/, '@break' ],\n      ],\n\n      props: [\n        [ CATEGORY_PROPERTY, /[a-z0-9-]+(?=:)/i ],\n        [ '#url', /\\burl\\(/, '@rest' ],\n        [ CATEGORY_FUNCTION, /\\b[\\w-]+(?=\\()\\b/ ],\n        [ CATEGORY_KEYWORD, /!important|\\b(?:initial|inherit|unset)/ ],\n        [ CATEGORY_PROPERTY, /[a-z0-9-]+(?=:)/ ],\n        [ CATEGORY_NUMBER, /#([0-9a-f]{6}|[0-9a-f]{3})/i ],\n        [ CATEGORY_NUMBER, /\\bU\\+[0-9a-f?-]+/i ],\n        [ CATEGORY_NUMBER, /[+-]?(\\d+\\.?\\d*|\\d*\\.?\\d+)/ ],\n        [ CATEGORY_SYMBOL, /[:;,]/ ],\n        [ '#paren', /\\(/, '@rest' ],\n        [ CATEGORY_BRACKET, /[[\\])]/ ],\n        [ CATEGORY_SPACE, REGEXP_SPACE ],\n      ],\n    },\n  };\n}\n","import { Language } from '../../types';\nimport { common } from '../common/common';\nimport {\n  CATEGORY_BRACKET,\n  CATEGORY_DECORATOR,\n  CATEGORY_KEYWORD,\n  CATEGORY_REGEXP,\n  CATEGORY_STRING,\n} from '../../constants/categories';\nimport { assign, before } from '../../utils';\n\n\n/**\n * Returns the JavaScript language definition.\n *\n * @return A Language object.\n */\nexport function javascript(): Language {\n  const language = assign( common(), {\n    id   : 'javascript',\n    name : 'JavaScript',\n    alias: [ 'js' ],\n  } );\n\n  const { grammar } = language;\n  const { main }    = grammar;\n\n  before( main, CATEGORY_KEYWORD, [\n    [ CATEGORY_REGEXP, /\\/(\\[.*[^\\\\]?]|\\\\\\/|.)+?\\/[gimsuy]*/ ],\n    [ CATEGORY_KEYWORD, /\\b(?:as|async|await|case|catch|const|debugger|default|delete|enum|export|from|import|let|package|private|protected|public|super|switch|static|this|typeof|undefined|var|void|with|yield)\\b/ ],\n    [ CATEGORY_KEYWORD, /\\b((get|set)(?= *\\S+\\(\\)))/ ], // todo\n    [ '#backtick', /`/, '@rest' ],\n    [ CATEGORY_DECORATOR, /@[^\\s(@]+/ ],\n  ]\n  );\n\n  assign( grammar, {\n    backtick: [\n      [ CATEGORY_STRING, /^`/ ],\n      [ CATEGORY_STRING, /(\\$[^{]|\\\\[$`]|[^`$])+/ ],\n      [ '#expression', /\\${/, '@rest' ],\n      [ CATEGORY_STRING, /`/, '@break' ],\n    ],\n\n    expression: [\n      [ CATEGORY_BRACKET, /^\\${/ ],\n      [ CATEGORY_BRACKET, /}/, '@break' ],\n      [ '#main' ],\n    ],\n  } );\n\n  return language;\n}\n","import {\n  CATEGORY_ATTRIBUTE, CATEGORY_BRACKET, CATEGORY_COMMENT, CATEGORY_ENTITY, CATEGORY_PROLOG, CATEGORY_SPACE,\n  CATEGORY_SYMBOL, CATEGORY_TAG, CATEGORY_VALUE,\n} from '../../constants/categories';\nimport { REGEXP_SPACE } from '../../constants/regexp';\nimport { Language } from '../../types';\nimport { css } from '../css/css';\nimport { javascript } from '../javascript/javascript';\n\n\n/**\n * Returns the HTML language definition.\n *\n * @return A Language object.\n */\nexport function html(): Language {\n  return {\n    id   : 'html',\n    alias: [ 'markup' ],\n    name : 'HTML',\n\n    use: {\n      javascript: javascript(),\n      css       : css(),\n    },\n\n    grammar: {\n      main: [\n        [ CATEGORY_COMMENT, /<!--.*?-->/s ],\n        [ CATEGORY_PROLOG, /<!DOCTYPE.*?>/ ],\n        [ CATEGORY_PROLOG, /<!\\[CDATA\\[.*]]>/s ],\n        [ '#script', /<script.*?>.*?<\\/script>/s ],\n        [ '#style', /<style.*?>.*?<\\/style>/s ],\n        [ '#tag', /<.*?>/s ],\n        [ CATEGORY_ENTITY, /&[\\da-z]+;|&#\\d+;/i ],\n      ],\n\n      script: [\n        [ '#tag', /^<script.*?>/s ],\n        [ '@javascript', /.+(?=<\\/script>)/s ],\n        [ '#tag', /<\\/script>/ ],\n      ],\n\n      style: [\n        [ '#tag', /^<style.*?>/s ],\n        [ '@css', /.+(?=<\\/style>)/s ],\n        [ '#tag', /<\\/style>/ ],\n      ],\n\n      tag: [\n        [ '#attr', /\\s+.+(?=[\\s/>])/s ],\n        [ CATEGORY_TAG, /[^\\s/<>\"'=]+/ ],\n        [ CATEGORY_BRACKET, /[<>]/ ],\n        [ CATEGORY_SYMBOL, /[/]/ ],\n      ],\n\n      attr: [\n        [ CATEGORY_SPACE, REGEXP_SPACE ],\n        [ CATEGORY_VALUE, /(['\"])(\\\\\\1|.)*?\\1/ ],\n        [ CATEGORY_SYMBOL, /[/=]/ ],\n        [ CATEGORY_ATTRIBUTE, /[^\\s/>\"'=]+/ ],\n      ],\n    },\n  };\n}\n","import { Language } from '../../types';\n\n\n/**\n * Returns the None language definition.\n *\n * @return A Language object.\n */\nexport function none(): Language {\n  return {\n    id     : 'none',\n    name   : '',\n    grammar: { main: [] },\n  };\n}\n","import { Language } from '../../types';\nimport { CATEGORY_PROLOG } from '../../constants/categories';\nimport { assign } from '../../utils';\nimport { html } from '../html/html';\n\n\n/**\n * Returns the XML language definition.\n *\n * @return A Language object.\n */\nexport function xml(): Language {\n  const language = assign( html(), {\n    id   : 'xml',\n    name : 'XML',\n    alias: [],\n  } );\n\n  language.grammar.main.unshift( [ CATEGORY_PROLOG, /<\\?.*?\\?>/s ] );\n\n  return language;\n}\n","import { REGEXP_BOOLEAN, REGEXP_DOUBLE_QUOTE, REGEXP_SPACE } from '../../constants/regexp';\nimport { Language } from '../../types';\nimport {\n  CATEGORY_BOOLEAN, CATEGORY_BRACKET, CATEGORY_KEYWORD, CATEGORY_NUMBER, CATEGORY_OPERATOR,\n  CATEGORY_PROPERTY, CATEGORY_SPACE, CATEGORY_STRING, CATEGORY_SYMBOL,\n} from '../../constants/categories';\n\n\n/**\n * Returns the JSON language definition.\n *\n * @link https://www.json.org/json-en.html\n *\n * @return A Language object.\n */\nexport function json(): Language {\n  return {\n    id  : 'json',\n    name: 'JSON',\n\n    grammar: {\n      main: [\n        [ CATEGORY_PROPERTY, /\".*?[^\\\\]\"(?=:)/ ],\n        [ CATEGORY_STRING, REGEXP_DOUBLE_QUOTE ],\n        [ CATEGORY_KEYWORD, /\\bnull\\b/ ],\n        [ CATEGORY_NUMBER, /[+-]?(\\d+\\.?\\d*)([eE][+-]?\\d+)?/ ],\n        [ CATEGORY_BRACKET, /[{}[]]/ ],\n        [ CATEGORY_BOOLEAN, REGEXP_BOOLEAN ],\n        [ CATEGORY_OPERATOR, /:/ ],\n        [ CATEGORY_SYMBOL, /[,]/ ],\n        [ CATEGORY_SPACE, REGEXP_SPACE ],\n      ],\n    },\n  };\n}\n","import { Language } from '../../types';\nimport {\n  CATEGORY_ATTRIBUTE, CATEGORY_BRACKET, CATEGORY_CLASS, CATEGORY_SPACE,\n  CATEGORY_SYMBOL, CATEGORY_TAG, CATEGORY_VALUE,\n} from '../../constants/categories';\nimport { REGEXP_SPACE } from '../../constants/regexp';\nimport { assign, before } from '../../utils';\nimport { javascript } from '../javascript/javascript';\n\n\n/**\n * Returns the JSX language definition.\n *\n * @return A Language object.\n */\nexport function jsx(): Language {\n  const language = assign( javascript(), {\n    id   : 'jsx',\n    name : 'JSX',\n    alias: [ 'react' ],\n    use  : { javascript: javascript() },\n  } );\n\n  const { grammar } = language;\n  const { main }    = grammar;\n\n  before( main, CATEGORY_CLASS, [ [ '#pickPairedTag' ], [ '#pickSelfClosedTag' ] ] );\n\n  assign( grammar, {\n    // This doesn't pick correct paired tags when they are nested, but they are incrementally searched later.\n    pickPairedTag: [\n      [ '#pairedTag', /<\\s*?([\\w]+?).*?>.*?<\\/\\1>/s, '@rest' ],\n    ],\n\n    pickSelfClosedTag: [\n      [ '#selfClosedTag', /<\\s*?([\\w]+?).*?\\/>/s ],\n    ],\n\n    pairedTag: [\n      [ '#openTag', /^</, '@rest' ],\n      [ '@javascript', /{.*?}/s ],\n      [ '#pickPairedTag' ],\n      [ '#pickSelfClosedTag' ],\n      [ '#tagName', /<\\/[\\w][^\\s]*?>/, '@break' ],\n    ],\n\n    selfClosedTag: [\n      [ '#openTag', /^</, '@rest' ],\n    ],\n\n    openTag: [\n      [ '#tagName', /<\\s*[^\\s/>\"'=]+/ ],\n      [ '@javascript', /{.*?}/s ],\n      [ CATEGORY_ATTRIBUTE, /[^\\s/>\"'=]+/ ],\n      [ CATEGORY_VALUE, /(['\"])(\\\\\\1|.)*?\\1/ ],\n      [ CATEGORY_SPACE, REGEXP_SPACE ],\n      [ CATEGORY_SYMBOL, /[/=]/ ],\n      [ CATEGORY_BRACKET, />/, '@break' ],\n    ],\n\n    tagName: [\n      [ CATEGORY_BRACKET, /[<>]/ ],\n      [ CATEGORY_SPACE, REGEXP_SPACE ],\n      [ CATEGORY_SYMBOL, /\\// ],\n      [ CATEGORY_CLASS, /[A-Z][\\w$-]*/ ],\n      [ CATEGORY_TAG, /[^\\s/>\"'=]+/ ],\n    ],\n  } );\n\n  return language;\n}\n","import { Language } from '../../types';\nimport {\n  CATEGORY_BRACKET, CATEGORY_COMMENT, CATEGORY_FUNCTION, CATEGORY_OPERATOR, CATEGORY_PROPERTY,\n  CATEGORY_SELECTOR, CATEGORY_SPACE, CATEGORY_STRING, CATEGORY_SYMBOL,\n  CATEGORY_TAG, CATEGORY_VARIABLE,\n} from '../../constants/categories';\nimport { REGEXP_MULTILINE_COMMENT, REGEXP_SLASH_COMMENT, REGEXP_SPACE } from '../../constants/regexp';\nimport { assign, before } from '../../utils';\nimport { css } from '../css/css';\n\n\n/**\n * Returns the SCSS language definition.\n *\n * @return A Language object.\n */\nexport function scss(): Language {\n  const language = assign( css(), {\n    id  : 'scss',\n    name: 'SCSS',\n  } );\n\n  const { grammar } = language;\n\n  assign( grammar, {\n    findBlock: [\n      [ '#block', /(#{[^;]*?}|[^\\s])(#{[^;]*?}|[^;{}])*[^#]{.*?}/s, '@rest' ],\n    ],\n\n    findAtrule: [\n      [ '#atrule', /@\\w.+?(;|(?=[^#]{))/s ],\n    ],\n\n    findSelector: [\n      [ '#selector', /[^\\s{};/].*?[^#](?={)/s ],\n    ],\n\n    findInterp: [\n      [ '#interp', /#{/, '@rest' ],\n    ],\n\n    common: [\n      [ '#string' ],\n      [ CATEGORY_COMMENT, REGEXP_MULTILINE_COMMENT ],\n      [ CATEGORY_COMMENT, REGEXP_SLASH_COMMENT ],\n      [ CATEGORY_SPACE, REGEXP_SPACE ],\n    ],\n\n    string: [\n      [ '#singleQuote', /'/, '@rest' ],\n      [ '#doubleQuote', /\"/, '@rest' ],\n    ],\n\n    singleQuote: [\n      [ CATEGORY_STRING, /^'/ ],\n      [ '#findInterp' ],\n      [ CATEGORY_STRING, /(\\\\'|#[^{]|[^'#])+/ ],\n      [ CATEGORY_STRING, /'/, '@break' ],\n    ],\n\n    doubleQuote: [\n      [ CATEGORY_STRING, /^\"/ ],\n      [ '#findInterp' ],\n      [ CATEGORY_STRING, /(\\\\\"|#[^{]|[^\"#])+/ ],\n      [ CATEGORY_STRING, /\"/, '@break' ],\n    ],\n\n    selector: [\n      [ '#common' ],\n      [ '#findInterp' ],\n      [ CATEGORY_OPERATOR, /[>+~]/ ],\n      [ CATEGORY_BRACKET, /[[\\]()]/ ],\n      [ CATEGORY_SYMBOL, /=/ ],\n      [ CATEGORY_SELECTOR, /::?\\S+(?=#{)/ ],\n      [ CATEGORY_SELECTOR, /[\\W\\d]\\S+(?=#{)/ ],\n      [ CATEGORY_TAG, /\\b[a-zA-Z]+\\b|\\*/ ],\n      [ CATEGORY_SELECTOR, /\\S+/ ],\n    ],\n\n    url: [\n      [ '#common' ],\n      [ '#findInterp' ],\n      [ CATEGORY_FUNCTION, /^url/ ],\n      [ CATEGORY_BRACKET, /\\(/ ],\n      [ CATEGORY_STRING, /[^)]+(?=#{)/ ],\n      [ CATEGORY_STRING, /[^)]+/ ],\n      [ CATEGORY_BRACKET, /\\)/, '@break' ],\n    ],\n\n    interp: [\n      [ CATEGORY_BRACKET, /#{/ ],\n      [ CATEGORY_BRACKET, /}/, '@break' ],\n      [ '#common' ],\n      [ '#props' ],\n    ],\n  } );\n\n  grammar.inner.unshift( [ '#findInterp' ] );\n\n  before( grammar.atrule, '#url', [ [ '#findInterp' ] ] );\n  before( grammar.props, CATEGORY_PROPERTY, [\n    [ '#findInterp' ],\n    [ CATEGORY_VARIABLE, /\\$[\\w-_]+/ ],\n  ] );\n\n  return language;\n}\n","import { Language } from '../../types';\nimport { assign } from '../../utils';\nimport { xml } from '../xml/xml';\n\n\n/**\n * Returns the XML language definition.\n *\n * @return A Language object.\n */\nexport function svg(): Language {\n  return assign( xml(), {\n    id   : 'svg',\n    name : 'SVG',\n    alias: [],\n  } );\n}\n","import { Language } from '../../types';\nimport { CATEGORY_FUNCTION, CATEGORY_KEYWORD } from '../../constants/categories';\nimport { assign, before } from '../../utils';\nimport { javascript } from '../javascript/javascript';\n\n\n/**\n * Returns the Typescript language definition.\n *\n * @return A Language object.\n */\nexport function typescript(): Language {\n  const language = assign( javascript(), {\n    id   : 'typescript',\n    name : 'TypeScript',\n    alias: [ 'ts' ],\n  } );\n\n  const { grammar } = language;\n  const { main }    = grammar;\n\n  before( main, CATEGORY_KEYWORD, [\n    [\n      CATEGORY_KEYWORD,\n      /\\b(?:declare|keyof|namespace|readonly|type|string|number|boolean|bigint|symbol|object|any|never|unknown|infer)\\b/,\n    ],\n  ] );\n\n  before( main, CATEGORY_FUNCTION, [ [ '#functions', /([\\w$]+)?(?:<[^>]+?>)?\\s*?\\(/ ] ] );\n\n  assign( grammar, {\n    functions: [\n      [ CATEGORY_FUNCTION, /^[\\w$]+/ ],\n      // Avoid circular references(\"main\" has #functions).\n      ...main.filter( tokenizer => tokenizer[ 0 ] !== '#functions' ),\n    ],\n  } );\n\n  return language;\n}\n","import { Language } from '../../types';\nimport { assign } from '../../utils';\nimport { html } from '../html/html';\n\n\n/**\n * Returns the VUE language definition.\n *\n * @return A Language object.\n */\nexport function vue(): Language {\n  const language = assign( html(), { id: 'vue', name: 'Vue', alias: [] } );\n\n  // Vue uses Mustache syntax for writing code inside tags.\n  language.grammar.main.push( [ '@javascript', /{{[\\s\\S]*?}}/ ] );\n\n  return language;\n}\n","import { Language, Options, Token } from '../../types';\nimport { Lexer } from '../Lexer/Lexer';\nimport { Renderer } from '../Renderer/Renderer';\nimport { CLASSES } from '../../constants/classes';\nimport { ATTRIBUTE_LANGUAGE } from '../../constants/attributes';\nimport { attr, isHTMLElement, text, assert, isString, assign, addClass, toArray } from '../../utils';\nimport { none } from '../../languages';\n\n\n/**\n * Stores all Lexer instances.\n */\nconst lexers: Record<string, Lexer> = {};\n\n/**\n * The class that tokenizes code for syntax highlighting.\n *\n * @since 0.0.1\n */\nexport class RyuseiLight {\n  /**\n   * Registers languages.\n   *\n   * @param languages - A Language object or objects.\n   */\n  static register( languages: Language | Language[] ): void {\n    toArray( languages ).forEach( language => {\n      const { id } = language;\n\n      if ( id && ! lexers[ id ] ) {\n        const lexer = new Lexer( language );\n\n        ( language.alias || [] ).concat( id ).forEach( id => {\n          lexers[ id ] = lexer;\n        } );\n      }\n    } );\n  }\n\n  /**\n   * Adds components.\n   *\n   * @param components - An object literal with Component functions.\n   */\n  static compose = Renderer.compose;\n\n  /**\n   * Tokenizes the provided string.\n   *\n   * @param code     - A string to tokenize.\n   * @param language - A language ID.\n   *\n   * @return An array of arrays with tokens as [ string, string ].\n   */\n  static tokenize( code: string, language: string ): Token[][] {\n    return RyuseiLight.getLexer( language ).tokenize( code );\n  }\n\n  /**\n   * Returns a registered Lexer instance.\n   * If it's not found, the `none` lexer will be returned.\n   *\n   * @param language - A language name.\n   */\n  protected static getLexer( language: string ) {\n    if ( ! lexers.none ) {\n      RyuseiLight.register( none() );\n    }\n\n    return lexers[ language ] || lexers.none;\n  }\n\n  /**\n   * Holds all renderers.\n   */\n  protected readonly renderers: Renderer[] = [];\n\n  /**\n   * Holds options.\n   */\n  protected readonly options: Options;\n\n  /**\n   * The RyuseiLight constructor.\n   *\n   * @param options  - Optional. Options.\n   */\n  constructor( options: Options = {} ) {\n    this.options = assign( {}, options );\n  }\n\n  /**\n   * Returns a new Renderer instance.\n   *\n   * @param code    - A code to highlight.\n   * @param elm     - Optional. An element to highlight.\n   * @param options - Optional. Options.\n   */\n  protected getRenderer( code: string, elm?: HTMLElement, options: Options = {} ) {\n    options = assign( {}, this.options, options );\n\n    const language     = options.language;\n    const { name, id } = RyuseiLight.getLexer( language ).language;\n    return new Renderer( RyuseiLight.tokenize( code, language ), { name, id }, elm, options );\n  }\n\n  /**\n   * Applies the highlighter to elements that matches the selector or the provided element.\n   *\n   * @param target  - A selector or an element.\n   * @param options - Optional. Options.\n   */\n  apply( target: string | Element, options: Options = {} ): void {\n    const elms = isString( target ) ? document.querySelectorAll( target ) : [ target ];\n\n    for ( let i = 0; i < elms.length; i++ ) {\n      const elm = elms[ i ];\n\n      if ( isHTMLElement( elm ) ) {\n        const elmOptions = assign( {}, options, { language: attr( elm, ATTRIBUTE_LANGUAGE ) || undefined } );\n        const renderer   = this.getRenderer( text( elm ), elm, elmOptions );\n        const isPre      = elm instanceof HTMLPreElement;\n\n        if ( isPre ) {\n          addClass( elm, [ CLASSES.root, `${ CLASSES.root }--${ renderer.info.id }` ] );\n        }\n\n        elm.innerHTML = renderer.html( ! isPre );\n\n        renderer.event.emit( 'applied', elm );\n        this.renderers.push( renderer );\n      }\n    }\n  }\n\n  /**\n   * Returns highlighted HTML by tokenizing the provided code.\n   *\n   * @param code    - Code to highlight.\n   * @param options - Optional. Options.\n   *\n   * @return Highlighted HTML string.\n   */\n  html( code: string, options: Options = {} ): string {\n    assert( isString( code ), 'Invalid code.' );\n    return this.getRenderer( code, null, options ).html();\n  }\n\n  /**\n   * Destroys the instance.\n   */\n  destroy(): void {\n    this.renderers.forEach( renderer => {\n      renderer.destroy();\n    } );\n  }\n}\n","import { PROJECT_CODE_SHORT } from '../../constants/project';\nimport { Renderer } from '../../core/Renderer/Renderer';\nimport { CLASSES } from '../../constants/classes';\nimport { attr, error, isArray } from '../../utils';\n\n\n/**\n * The data attribute name for active lines.\n * The value must be an array in JSON format, such as \"[ 2, [ 5, 10 ] ]\"\n *\n * @since 0.0.1\n */\nconst ATTRIBUTE_ACTIVE_LINES = `data-${ PROJECT_CODE_SHORT }-active-lines`;\n\n/**\n * The component for highlighting lines.\n *\n * @since 0.0.1\n */\nexport function ActiveLines( { event, root, options }: Renderer ): void {\n  const lines = ( root && parseData( root ) ) || options.activeLines;\n\n  if ( isArray( lines ) ) {\n    const activeLines = normalize( lines );\n\n    event.on( 'gutter:row:open', ( html, classes, index ) => {\n      if ( activeLines[ index ] ) {\n        classes.push( activeLines[ index ] );\n      }\n    } );\n\n    event.on( 'line:open', ( html, classes, index ) => {\n      if ( activeLines[ index ] ) {\n        classes.push( activeLines[ index ] );\n      }\n    } );\n  }\n}\n\n/**\n * Attempts to get definition of active lines from a data attribute.\n *\n * @param elm - A root element.\n *\n * @return An array with line numbers if available, or otherwise `undefined`.\n */\nfunction parseData( elm: HTMLElement ): Array<number | [ number, number ]> | void {\n  const data = attr( elm, ATTRIBUTE_ACTIVE_LINES );\n\n  if ( data ) {\n    try {\n      return JSON.parse( data );\n    } catch ( e ) {\n      error( e.message );\n    }\n  }\n}\n\n/**\n * Normalizes the definition of lines to activate.\n *\n * @param lines - An array with line numbers.\n *\n * @return An array with normalized line numbers.\n */\nfunction normalize( lines: Array<number | [ number, number ]> ): string[] {\n  const numbers = [];\n\n  lines.forEach( range => {\n    if ( ! isArray( range ) ) {\n      range = [ range, range ];\n    }\n\n    const start = ( +range[ 0 ] || 1 ) - 1;\n    const end   = ( +range[ 1 ] || 1 ) - 1;\n\n    for ( let i = start; i <= end; i++ ) {\n      numbers[ i ] = CLASSES.active;\n    }\n  } );\n\n  return numbers;\n}\n","import { Renderer } from '../../core/Renderer/Renderer';\nimport { LINE_BREAK } from '../../constants/characters';\nimport { CLASSES } from '../../constants/classes';\nimport { PROJECT_CODE_SHORT } from '../../constants/project';\nimport { addClass, append, assign, create, isObject, query, styles } from '../../utils';\n\n\n/**\n * Default options for the Copy component.\n *\n * @since 0.0.1\n */\nconst DEFAULT_OPTIONS = {\n  html      : 'Copy',\n  activeHtml: 'Done',\n  duration  : 1000,\n  ariaLabel : 'Copy code to clipboard',\n};\n\n/**\n * The component for creating a copy button and handling click.\n *\n * @since 0.0.1\n */\nexport function Copy( { lines, event, options }: Renderer ): void {\n  if ( options.copy ) {\n    const copyOptions = assign( {}, DEFAULT_OPTIONS, isObject( options.copy ) ? options.copy : {} );\n    const buttonClass = `${ PROJECT_CODE_SHORT }__copy`;\n    const labelClass  = `${ PROJECT_CODE_SHORT }__button__label`;\n\n    options.tools = true;\n\n    event.on( `overlay:tools`, append => {\n      append( `<button type=\"button\" class=\"rl__button ${ buttonClass }\" aria-label=\"Copy code to clipboard\">` );\n      append( `<span class=\"${ labelClass } ${ labelClass }--inactive\">${ copyOptions.html }</span>` );\n      append( `<span class=\"${ labelClass } ${ labelClass }--active\">${ copyOptions.activeHtml }</span>` );\n      append( `</button>` );\n    } );\n\n    event.on( 'applied', root => {\n      const button = query<HTMLButtonElement>( `.${ buttonClass }`, root );\n      const code   = lines.map( line => line.map( token => token[ 1 ] ).join( '' ) ).join( LINE_BREAK );\n\n      if ( button ) {\n        const onClick = () => { copy( code, button, copyOptions.duration ) };\n        button.addEventListener( 'click', onClick );\n\n        event.on( 'destroy', () => {\n          button.removeEventListener( 'click', onClick );\n        } );\n      }\n    } );\n  }\n}\n\n/**\n * Attempts to copy the provided code by the Clipboard API.\n *\n * @param code     - A code to copy.\n * @param button   - A button element.\n * @param duration - Duration for the button activation.\n */\nfunction copy( code: string, button: HTMLButtonElement, duration: number ): void {\n  const onSuccess = () => {\n    if ( duration ) {\n      toggleClass( button, duration );\n    }\n  };\n\n  if ( navigator.clipboard ) {\n    navigator.clipboard.writeText( code )\n      .then( onSuccess )\n      .catch( () => execCopy( code, onSuccess ) );\n  } else {\n    execCopy( code, onSuccess );\n  }\n}\n\n/**\n * Attempts to copy the provided code by the `document.execCommand()` for old browsers.\n * Note that this method is deprecated.\n *\n * @param code      - Code to copy.\n * @param onSuccess - Called after the copy is done.\n */\nfunction execCopy( code: string, onSuccess: () => void ): void {\n  const textarea = create( 'textarea' );\n  textarea.textContent = code;\n\n  styles( textarea, { position: 'absolute', left: '-99999px' } );\n  append( document.body, textarea );\n\n  textarea.focus();\n  textarea.select();\n\n  let failed;\n\n  try {\n    document.execCommand( 'copy' );\n  } catch ( e ) {\n    alert( 'Failed to copy.' );\n    failed = true;\n  }\n\n  document.body.removeChild( textarea );\n\n  if ( ! failed ) {\n    onSuccess();\n  }\n}\n\n/**\n * Toggles the active class of the button.\n *\n * @param button   - A button element.\n * @param duration - Duration for the button activation.\n */\nfunction toggleClass( button: HTMLButtonElement, duration: number ): void {\n  addClass( button, CLASSES.active );\n\n  const prop = '_rlTimer';\n\n  if ( button[ prop ] ) {\n    clearTimeout( button[ prop ] );\n  }\n\n  button[ prop ] = setTimeout( () => {\n    button.classList.remove( CLASSES.active );\n  }, duration );\n}\n","import { append }   from '../append/append';\nimport { addClass } from '../addClass/addClass';\n\n\n/**\n * Creates an HTML element.\n *\n * @param tag     - A tag name.\n * @param classes - Optional. Classes to add.\n * @param parent  - Optional. A parent element where the created element is appended.\n */\nexport function create<K extends keyof HTMLElementTagNameMap>(\n  tag: K,\n  classes?: string | string[],\n  parent?: HTMLElement\n): HTMLElementTagNameMap[ K ] {\n  const elm = document.createElement( tag );\n\n  if ( classes ) {\n    addClass( elm, classes );\n  }\n\n  if ( parent ) {\n    append( parent, elm );\n  }\n\n  return elm;\n}\n","import { PROJECT_CODE } from '../../../constants/project';\n\n\n/**\n * Displays an error message on the console.\n *\n * @param message - An error message.\n */\nexport function error( message: string ): void {\n  console.error( `[${ PROJECT_CODE }] ${ message }` );\n}\n","import { Renderer } from '../../core/Renderer/Renderer';\nimport { PROJECT_CODE_SHORT } from '../../constants/project';\nimport { CLASSES } from '../../constants/classes';\nimport { styles, throttle, isHTMLElement, query } from '../../utils';\n\n\n/**\n * The throttle duration in milliseconds for resizing gutter rows.\n *\n * @since 0.0.1\n */\nconst THROTTLE_DURATION = 100;\n\n/**\n * The class name for a gutter element.\n *\n * @since 0.0.1\n */\nconst GUTTER_CLASS_NAME = `${ PROJECT_CODE_SHORT }__gutter`;\n\n/**\n * The class name for row element in a gutter.\n *\n * @since 0.0.1\n */\nconst GUTTER_ROW_CLASS_NAME = `${ GUTTER_CLASS_NAME }__row`;\n\n/**\n * The component for creating a gutter and its rows.\n * This is usually activated by other components through the `gutter` option.\n *\n * @since 0.0.1\n */\nexport function Gutter( { lines, event, root, options }: Renderer ): void {\n  // Wait for initialization of other components.\n  event.on( 'mounted', () => {\n    if ( ! options.gutter ) {\n      return;\n    }\n\n    event.on( 'open', ( append, classes ) => {\n      classes.push( 'has-gutter' );\n    } );\n\n    event.on( 'body:opened', append => {\n      append( `<div class=\"${ GUTTER_CLASS_NAME }\" aria-hidden=\"true\">` );\n\n      for ( let i = 0; i < lines.length; i++ ) {\n        const classes = [ GUTTER_ROW_CLASS_NAME ];\n        event.emit( 'gutter:row:open', append, classes, i );\n\n        append( `<div class=\"${ classes.join( ' ' ) }\">` );\n        event.emit( 'gutter:row:opened', append, i );\n        append( `</div>` );\n      }\n\n      append( `</div>` );\n    } );\n\n    if ( ! root || typeof window === 'undefined' ) {\n      return;\n    }\n\n    window.addEventListener( 'resize', throttle( resize, THROTTLE_DURATION ) );\n    resize();\n\n    event.on( 'destroy', () => {\n      window.removeEventListener( 'resize', resize );\n    } );\n\n    /**\n     * Resizes rows according to line height.\n     */\n    function resize() {\n      const gutter = query( `.${ GUTTER_CLASS_NAME }`, root );\n      const code   = query( `.${ CLASSES.code }`, root );\n\n      if ( gutter && code ) {\n        for ( let i = 0; i < code.children.length; i++ ) {\n          const row  = gutter.children[ i ];\n          const line = code.children[ i ];\n\n          if ( isHTMLElement( row ) && row.clientHeight !== line.clientHeight ) {\n            styles( row, { height: `${ line.clientHeight }px` } );\n          }\n        }\n      }\n    }\n  } );\n}\n","import { AnyFunction } from '../../../types';\n\n\n/**\n * Returns a function that invokes the provided function at most once in the specified duration.\n *\n * @since 0.0.1\n *\n * @param callback - A function to throttle.\n * @param interval - A throttle duration in milliseconds.\n *\n * @return A throttled function.\n */\nexport function throttle( callback: AnyFunction, interval: number ): () => void {\n  let timer;\n\n  return function () {\n    if ( ! timer ) {\n      timer = setTimeout( () => {\n        callback();\n        timer = null;\n      }, interval );\n    }\n  };\n}\n","import { Renderer } from '../../core/Renderer/Renderer';\nimport { PROJECT_CODE_SHORT } from '../../constants/project';\n\n\n/**\n * The component for rendering a language name.\n *\n * @since 0.0.1\n */\nexport function LanguageName( { event, info, options }: Renderer ) {\n  const { name } = info;\n\n  if ( options.languageName && name ) {\n    const position = options.languageName === 'topLeft' ? 'topLeft' : 'topRight';\n    options.overlay = options.overlay || {};\n    options.overlay[ position ] = true;\n\n    event.on( `overlay:${ position }`, append => {\n      append( `<span class=\"${ PROJECT_CODE_SHORT }__name\">${ info.name }</span>` );\n    } );\n  }\n}\n","import { Renderer } from '../../core/Renderer/Renderer';\nimport { PROJECT_CODE_SHORT } from '../../constants/project';\nimport { attr } from '../../utils';\n\n\n/**\n * The data attribute name for line numbers.\n * This accepts boolean or number as a value.\n *\n * @since 0.0.1\n */\nconst ATTRIBUTE_LINE_NUMBERS = `data-${ PROJECT_CODE_SHORT }-line-numbers`;\n\n/**\n * The component for displaying line numbers in a gutter.\n *\n * @since 0.0.1\n */\nexport function LineNumbers( { root, event, options }: Renderer ): void {\n  const data   = root ? attr( root, ATTRIBUTE_LINE_NUMBERS ) : '';\n  const number = data === '' ? +options.lineNumbers : +data;\n\n  if ( number || number === 0 ) {\n    options.gutter = true;\n    const start = Math.floor( number ) - 1;\n\n    event.on( 'gutter:row:opened', ( append, i ) => {\n      append( `<span class=\"${ PROJECT_CODE_SHORT }__line-number\">${ i + 1 + start }</span>` );\n    } );\n  }\n}\n","import { PROJECT_CODE_SHORT } from '../../constants/project';\nimport { Renderer } from '../../core/Renderer/Renderer';\n\n\n/**\n * The component for rendering overlay elements.\n *\n * @since 0.0.1\n */\nexport function Overlay( { event, options }: Renderer ) {\n  event.on( 'mounted', () => {\n    const className = `${ PROJECT_CODE_SHORT }__overlay`;\n    const { overlay = {} } = options;\n\n    if ( overlay.topRight || options.tools ) {\n      event.on( 'close', append => {\n        append( `<div class=\"${ className } ${ className }--top-right\">` );\n        event.emit( 'overlay:topRight', append );\n\n        if ( options.tools ) {\n          append( `<span class=\"${ PROJECT_CODE_SHORT }__tools\">` );\n          event.emit( 'overlay:tools', append );\n          append( `</span>` );\n        }\n\n        append( `</div>` );\n      } );\n    }\n\n    if ( overlay.topLeft ) {\n      event.on( 'close', append => {\n        append( `<div class=\"${ className } ${ className }--top-left\">` );\n        event.emit( 'overlay:topLeft', append );\n        append( `</div>` );\n      } );\n    }\n\n    if ( overlay.topRight || overlay.topLeft ) {\n      event.on( 'open', ( append, classes ) => {\n        classes.push( 'has-top-overlay' );\n      } );\n    }\n  } );\n}\n","import { PROJECT_CODE_SHORT } from '../../constants/project';\nimport { Renderer } from '../../core/Renderer/Renderer';\nimport { attr } from '../../utils';\n\n\n/**\n * The data attribute name for a title.\n *\n * @since 0.0.1\n */\nconst ATTRIBUTE_TITLE = `data-${ PROJECT_CODE_SHORT }-title`;\n\n/**\n * The component for rendering a title in a header.\n *\n * @since 0.0.1\n */\nexport function Title( { event, root, options }: Renderer ) {\n  const title = ( root && attr( root, ATTRIBUTE_TITLE ) ) || options.title;\n\n  if ( title ) {\n    event.on( 'open', append => {\n      append( `<div class=\"${ PROJECT_CODE_SHORT }__header\">` );\n      append( `<span class=\"${ PROJECT_CODE_SHORT }__title\">${ title }</span>` );\n      append( `</div>` );\n    } );\n  }\n}\n","import { RyuseiLight } from '../core/RyuseiLight/RyuseiLight';\nimport * as languages  from '../languages';\nimport * as components from '../components';\nimport { forOwn } from '../utils';\n\nforOwn( languages, language => {\n  RyuseiLight.register( language() );\n} );\n\nRyuseiLight.compose( components );\n\nexport { RyuseiLight as default } from '../core/RyuseiLight/RyuseiLight';\n"],"names":["CATEGORY_KEYWORD","CATEGORY_COMMENT","CATEGORY_TAG","CATEGORY_SELECTOR","CATEGORY_ATTRIBUTE","CATEGORY_PROPERTY","CATEGORY_VALUE","CATEGORY_PROLOG","CATEGORY_STRING","CATEGORY_NUMBER","CATEGORY_BOOLEAN","CATEGORY_FUNCTION","CATEGORY_CLASS","CATEGORY_OPERATOR","CATEGORY_BRACKET","CATEGORY_SYMBOL","CATEGORY_SPACE","CATEGORY_TEXT","isObject","subject","isArray","Array","isString","isUndefined","isHTMLElement","HTMLElement","toArray","value","addClass","elm","classes","forEach","name","classList","add","append","parent","children","i","length","appendChild","forOwn","object","iteratee","keys","Object","assign","sources","source","key","attr","attrs","getAttribute","setAttribute","String","query","selector","document","querySelector","styles","style","text","node","textContent","assert","condition","message","Error","PROJECT_CODE","before","map","ref","entries","index","find","splice","push","startsWith","string","char","charAt","isStickySupported","sticky","Lexer","language","init","grammar","tokenizers","_this","merge","use","this","bind","reduce","merged","tokenizer","category","regexp","include","slice","_this2","flags","toString","match","getFlags","replace","RegExp","tokenizeBy","position","main","command","lastIndex","exec","handle","token","from","indexOf","lines","offset","lang","input","tokenize","EventBus","on","event","callback","handlers","emit","args","handler","destroy","CLASSES","root","container","PROJECT_CODE_SHORT","body","code","line","active","Components","Renderer","info","options","compose","components","Component","tokens","trim","pop","_this3","renderLines","tag","span","join","j","html","pre","fragment","id","containerClasses","bodyClasses","wrap","REGEXP_FUNCTION","REGEXP_NUMBER","REGEXP_BOOLEAN","REGEXP_BRACKET","REGEXP_SPACE","REGEXP_QUOTE","REGEXP_DOUBLE_QUOTE","REGEXP_MULTILINE_COMMENT","REGEXP_SLASH_COMMENT","common","css","findBlock","findAtrule","findSelector","block","inner","atrule","paren","url","props","javascript","alias","backtick","expression","script","none","xml","unshift","pickPairedTag","pickSelfClosedTag","pairedTag","selfClosedTag","openTag","tagName","findInterp","singleQuote","doubleQuote","interp","functions","filter","lexers","RyuseiLight","register","languages","lexer","concat","getLexer","getRenderer","apply","target","elms","querySelectorAll","elmOptions","undefined","renderer","isPre","HTMLPreElement","innerHTML","renderers","ATTRIBUTE_ACTIVE_LINES","DEFAULT_OPTIONS","activeHtml","duration","ariaLabel","execCopy","onSuccess","failed","textarea","createElement","left","focus","select","execCommand","e","alert","removeChild","data","JSON","parse","console","error","parseData","activeLines","numbers","range","start","end","normalize","copy","copyOptions","labelClass","tools","button","onClick","prop","clearTimeout","setTimeout","remove","toggleClass","navigator","clipboard","writeText","then","catch","addEventListener","removeEventListener","interval","timer","gutter","GUTTER_CLASS_NAME","window","resize","row","clientHeight","height","languageName","overlay","number","lineNumbers","Math","floor","topRight","topLeft","title"],"mappings":"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"}