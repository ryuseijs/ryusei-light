!function(e,n){if("function"==typeof define&&define.amd)define([],n);else if("undefined"!=typeof exports)n();else{n(),e.unknown={}}}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:this,(function(){var e="keyword",n="comment",t="string",i="function",r="bracket";function a(e){return void 0===e}function o(e,n){for(var t=Object.keys(e),i=0;i<t.length;i++)n(e[t[i]],t[i])}function s(e){for(var n=arguments.length,t=new Array(n>1?n-1:0),i=1;i<n;i++)t[i-1]=arguments[i];return t.forEach((function(n){o(n,(function(t,i){a(n[i])||(e[i]=n[i])}))})),e}function c(e,n,t){var i=function(e,n){for(var t=0;t<e.length;t++)if(e[t][0]===n)return t;return-1}(e,n);i>-1?e.splice.apply(e,[i,0].concat(t)):e.push.apply(e,t)}var f,u,l,d=/\b\w+(?= *\()/,b=/[+-]?(\d+\.?\d*|\d*\.?\d+)([eE][+-]?\d+)?/,p=/\b(?:true|false)\b/,m=/[[\]{}()]/,y=/[ \t]+/,w=/'(?:\\'|.)*?'/,g=/"(?:\\"|.)*?"/,h=/\/\*[\s\S]*?\*\//,k=/\/\/.*/;function v(){var a=s({id:"common",name:"",grammar:{main:[[t,w],[t,g],[n,h],[n,k],["regexp",/\/(\\\/|[^\n])+?\/[a-z]*/],[e,/\b(?:break|catch|class|continue|do|else|extends|finally|for|function|if|implements|in|instanceof|interface|new|null|return|throw|trait|try|while)\b/],["class",/\b[A-Z][\w$]*\b/],[i,d],["boolean",p],["identifier",/\b[a-z_$][\w$]*\b/],["number",b],["operator",/\+[+=]?|-[-=]?|\*\*?=?|\/=?|%=?|&&?=?|\|\|?=?|\?\??=?|<<?=?|>>?=?|[!=]=?=?|[~:^]/],[r,m],["symbol",/[;.,@]+/],["space",y]]}},{id:"javascript",name:"JavaScript",alias:["js"]}),o=a.grammar;return c(o.main,e,[[e,/\b(?:as|async|await|case|catch|const|debugger|default|delete|enum|export|from|import|let|package|private|protected|public|super|switch|static|this|typeof|undefined|var|void|with|yield)\b/],[e,/\b((get|set)(?= *\S+\(\)))/],["#backtick",/`/,"@rest"],["decorator",/@[^\s(@]+/]]),s(o,{backtick:[[t,/^`/],["#expression",/\${/,"@rest"],[t,/\$[^{]/],[t,/[^`$]+/],[t,/`/,"@break"]],expression:[[r,/^\${/],["#expression",/\${/,"@rest"],[n,h],[n,k],["#backtick",/`/,"@rest"],[r,/}/,"@break"],["#main"]]}),a}window&&window.RyuseiLight&&window.RyuseiLight.register((f=s(v(),{id:"typescript",name:"TypeScript",alias:["ts"]}),u=f.grammar,c(l=u.main,e,[[e,/\b(?:declare|keyof|namespace|readonly|type|string|number|boolean|bigint|symbol|object|any|never|unknown|infer)\b/]]),c(l,i,[["#functions",/([\w$]+)?(?:<[^>]+?>)?\s*?\(/]]),s(u,{functions:[[i,/^[\w$]+/]].concat(l.filter((function(e){return"#functions"!==e[0]})))}),f))}));
